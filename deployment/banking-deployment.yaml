# Banking Simulator - Production Kubernetes Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: banking-simulator-api
  namespace: banking-simulator
  labels:
    app: banking-simulator
    component: api
    version: v1.0.0
spec:
  replicas: 5  # Start with 5 replicas, auto-scale up to 50
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: banking-simulator
      component: api
  template:
    metadata:
      labels:
        app: banking-simulator
        component: api
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: banking-simulator-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: api
        image: banking-simulator/api:v1.0.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: url
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: redis-config
              key: url
        - name: INFLUXDB_URL
          valueFrom:
            configMapKeyRef:
              name: influxdb-config
              key: url
        - name: LOG_LEVEL
          value: "INFO"
        - name: ENVIRONMENT
          value: "production"
        - name: MAX_WORKERS
          value: "4"
        - name: METRICS_ENABLED
          value: "true"
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      - name: metrics-sidecar
        image: prom/node-exporter:latest
        ports:
        - containerPort: 9100
          name: metrics
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "64Mi"
            cpu: "50m"
      nodeSelector:
        node-type: "api"
      tolerations:
      - key: "api-workload"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---
apiVersion: v1
kind: Service
metadata:
  name: banking-simulator-api-service
  namespace: banking-simulator
  labels:
    app: banking-simulator
    component: api
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
spec:
  type: LoadBalancer
  sessionAffinity: None
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 9100
    targetPort: 9100
    protocol: TCP
    name: metrics
  selector:
    app: banking-simulator
    component: api

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: banking-simulator-api-hpa
  namespace: banking-simulator
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: banking-simulator-api
  minReplicas: 5
  maxReplicas: 50
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
  selector:
    matchLabels:
      app: banking-simulator
      component: api
  template:
    metadata:
      labels:
        app: banking-simulator
        component: api

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: banking-simulator-workers
  namespace: banking-simulator
  labels:
    app: banking-simulator
    component: workers
spec:
  replicas: 10  # Start with 10 workers, scale to 200
  selector:
    matchLabels:
      app: banking-simulator
      component: workers
  template:
    metadata:
      labels:
        app: banking-simulator
        component: workers
    spec:
      serviceAccountName: banking-simulator-workers
      containers:
      - name: worker
        image: banking-simulator/worker:v1.0.0
        command: ["celery"]
        args: ["-A", "workers.celery_app", "worker", "--loglevel=info", "--concurrency=4"]
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: url
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: redis-config
              key: url
        - name: WORKER_TYPE
          value: "simulation"
        - name: CONCURRENCY
          value: "4"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command: ["celery", "-A", "workers.celery_app", "inspect", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 30
      nodeSelector:
        node-type: "workers"

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: banking-simulator-workers-hpa
  namespace: banking-simulator
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: banking-simulator-workers
  minReplicas: 10
  maxReplicas: 200
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: External
    external:
      metric:
        name: redis_queue_length
        selector:
          matchLabels:
            queue: "simulation_tasks"
      target:
        type: AverageValue
        averageValue: "50"